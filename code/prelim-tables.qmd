---
title: "Preliminary tables"
author: Sam Harper
date: today
format: html
editor: source
code-fold: true
---

## Setup

Let's load the required packages for the analysis:

```{r setup, message = FALSE, results = FALSE}
library(here)
library(tidyverse)
library(readxl)
library(lubridate)
library(tsibble)
library(haven)
library(kableExtra)
library(rineq)
```

## County Disadvantage

Next let's read in the county-level data containing the SVI and SDI indexes

```{r dd}
# read in data
# get county disadvantage index
dd <- read_dta(here("data", "svi-sdi.dta"))
glimpse(dd)
```

Next we'll drop everything except the SDI and SVI metrics and population sizes, and create quintiles of each. Note here that this creates quintiles based on the *unweighted* distribution of counties. Weighted quintiles would likely produce a somewhat different distribution, but is still possible.

```{r dq}
# create quintiles of SVI and SDI scores
dq <- dd %>% rename_all(tolower) %>%
  select(county, svi_totpop, svi_2020, 
         sdi_county_population, sdi_2020) %>%
  mutate(sdiq = ntile(sdi_2020, 5),
         sviq = ntile(svi_2020, 5)) 
```

Now let's check to make sure that our quintiles contain increasing values of each index:

```{r quintiles}
# check quintile values
dq %>% group_by(sdiq) %>% 
  summarize(msdi = mean(sdi_2020)) %>%
  kbl() %>%
  kable_styling()

dq %>% group_by(sviq) %>% 
  summarize(msvi = mean(svi_2020))%>%
  kbl() %>%
  kable_styling()
```

Seems reasonable.

## Vaccine Data

Now let's read in the vaccine numerator data. Although data exist for the "Unknown" race this is problematic for matching with denonminators, so end up dropping it. Also restricting to ages 18 and over, but collapsing across those age categories. Could revisit to age-adjust or stratify later, but not sure how important it is for preliminary analysis.

```{r vn, message=FALSE}
# vaccine numerators
vn <- read_excel(here("data", "week-15-administered.xlsx"), 
  col_names = c("county", "lhd", "raceeth", "agegp",
    "sex", "facility", "doses", "date"), skip = 1)

# summarize doses by county and race (adults)
vns <- vn %>% select(county, raceeth, agegp, doses) %>%
  # recode race
  mutate(race = recode(raceeth, `Hispanic` = 1,
    `NH American Indian/Alaska Native` = 2,
    `NH Asian/Native Hawaiian/Other Pacific Islands` = 3,
    `NH Black` = 4, `NH Other Race` = 5, `NH White` = 6,
    `Unknown` = 7, .default = NA_real_),
  # recode age
    age = recode(agegp, `6 months through 4 years` = 1,
    `5 through 12 years` = 2, `13 through 17 years` = 3,
    `18 through 24 years` = 4, `25 through 49 years` = 5,
    `50 through 64 years` = 6, `65 years and older` = 7)) %>%
  
  # limit to adults
  filter(age>=4 & race<7) %>% drop_na() %>%
  group_by(county, race) %>%
  summarise(doses = sum(doses))

glimpse(vns)
```

Now we need the denominators. This file is a little different since it has population data for each month of the vaccine season, so those populations can't just be summed up. Instead, we average over months for each county/race/age/sex group, then sum them up.

```{r vd, message=FALSE}
# vaccine denominators

vd <- read_excel(here("data", "coverage.xlsx"),
  col_names = c("season", "county", "lhd", "raceeth",
    "agegp", "sex", "month", "flu_week", "pop",
    "coverage", "date"), skip = 1)

# summarize population by county and race (adults)
vds <- vd %>% 
  filter(season == "2022-23") %>%
  select(county, raceeth, agegp, sex, pop) %>%
  # recode race
  mutate(race = recode(raceeth, `Hispanic` = 1,
    `NH American Indian/Alaska Native` = 2,
    `NH Asian/Native Hawaiian/Other Pacific Islands` = 3,
    `NH Black` = 4, `NH Other Race` = 5, `NH White` = 6,
    `Unknown` = 7, .default = NA_real_),
  # recode age
    age = recode(agegp, `6 months through 4 years` = 1,
    `5 through 12 years` = 2, `13 through 17 years` = 3,
    `18 through 24 years` = 4, `25 through 49 years` = 5,
    `50 through 64 years` = 6, `65 years and older` = 7)) %>%
  
  # first need to get mean pop by month and sex
  group_by(county,race,age,sex) %>%
  summarise(mp = mean(pop, na.rm=TRUE)) %>%
  ungroup() %>%
  
  # limit to adults and drop NH Other race
  filter(age>=4 & race<7) %>% drop_na() %>%
  group_by(county, race) %>%
  summarise(pop = sum(mp))

glimpse(vds)
```

Now we merge the numerators, denominators, and the county disadvantage indexes to get a dataset we can use to generate summary tables of vaccine coverage by race-ethnicity and disadvantage index.

```{r merge, message=FALSE}
# combine vaccine doses and population by county and race
vax <- vns %>% 
  left_join(vds, by = join_by(county, race)) %>%

# now combine with county deprivation indices
  inner_join(dq, by = join_by(county)) %>%
  mutate(racef = recode_factor(race, `1` = "Hispanic",
    `2` = "NH AI/AN", `3` = "NH API", 
    `4` = "NH Black", `5` = "NH Other", 
    `6` = "NH White"))
```

The first 10 rows of the dataset look like...

```{r vax10, message=F}
kable(head(vax, n=10), digits=3) %>%
  kable_styling()
```

## Race-Ethnic Inequalities

And now we can make the tables by summing up the number of vaccine doses and the population counts for each county deprivation quintile and race-ethnic group.

```{r t1, message=FALSE}
t1 <- vax %>% filter(race!=5) %>%
  group_by(racef,sviq) %>%
  summarise(doses = sum(doses), 
            pop = sum(pop)) %>%
  mutate(rate = doses / pop * 100) %>%
  select(racef,sviq,rate) %>%
  
  pivot_wider(names_from = sviq, names_prefix = "SVI",
              values_from = rate)

t1 %>%
  kbl(digits=1, escape = FALSE,
    caption = "Vaccine coverage by race-ethnicity and SVI",
    col.names = c("", "Q1", "Q2", "Q3", "Q4", "Q5")) %>%
  add_header_above(c(" " = 1, "SVI Quintile (1=lowest)" = 5)) %>%
  kable_classic(html_font = "Helvetica", full_width = F) %>%
  kable_styling() %>%
  footnote("SVI quintiles based on unweighted distribution across counties.")
```

And by SDI:

```{r t2, message=FALSE}
t2 <- vax %>% filter(race!=5) %>%
  group_by(racef,sdiq) %>%
  summarise(doses = sum(doses), 
            pop = sum(pop)) %>%
  mutate(rate = doses / pop * 100) %>%
  select(racef,sdiq,rate) %>%
  
  pivot_wider(names_from = sdiq, names_prefix = "SDI",
              values_from = rate)

t2 %>%
  kbl(digits=1, escape = FALSE,
    caption = "Vaccine coverage by race-ethnicity and SDI",
    col.names = c("", "Q1", "Q2", "Q3", "Q4", "Q5")) %>%
  add_header_above(c(" " = 1, "SDI Quintile (1=lowest)" = 5)) %>%
  kable_classic(html_font = "Helvetica", full_width = T) %>%
  footnote(general = "SDI quintiles based on unweighted distribution across counties.")
```

## Inequalities by SVI or SDI
To calculate inequalities across the entire range of measures of disadvantage like SVI or SDI (at either the county or the tract level), we can take two approaches. One is 'univariate' in the sense that we want to estimate how unequal the distribution of vaccine coverage is across counties (or tracts). To visualize what this means, we can create a Lorenz curve that first ranks all counties (or tracts) by their vaccine coverage rate (lowest to highest), then plots on the x-axis the county's place in the cumulative distribution of counties, ranked by vaccine coverage, and on the y-axis the cumulative contribution to the overall vaccination rate. Lorenz curves can be either on the absolute or relative scale, but typically the relative scale is more common, as it leads to one of the most common measures of univariate inequality, the Gini coefficient.

Below we can see the Lorenz curve for counties, ranked by their vaccine coverage rate:
```{r f1}
f1 <- vn %>% select(county, doses) %>%
  group_by(county) %>%
  summarise(tdoses = sum(doses)) %>%
  right_join(dq, by = join_by(county)) %>%
  mutate(svi_rate = tdoses / svi_totpop * 100,
         sdi_rate = tdoses / sdi_county_population * 100)


f1_label <- "Least vaccinated 50%\nof counties account for\n42% of the overall\nvaccination rate"

f1 %>%
  arrange(svi_rate) %>%
  mutate(cpc = rank(svi_rate)/length(svi_rate)*100,
         cpv = cumsum(svi_rate)/sum(svi_rate)*100) %>%
  ggplot(aes(x = cpc, y = cpv, colour="coverage")) + geom_line() +
  geom_segment(aes(x = 0, y = 0, xend = 100, yend = 100,
                   colour = "equality"), linetype = 'dashed') +
  coord_cartesian(expand=FALSE) +
  scale_x_continuous(limits = c(0,100)) +
  scale_y_continuous(limits = c(0,100)) +
  scale_color_manual(values = c("#377eb8", "black")) +
  theme_bw() + theme(legend.position = "none") +
  geom_curve(aes(x = 53, y = 32, xend = 50, yend = 40),
             curvature = -0.3, arrow = arrow(length = unit(0.02, "npc"))) +
  annotate("text", label = f1_label, x = 54, y = 30, 
           size = 5, colour = "#377eb8", hjust=0) +
  labs(x = "Cumulative Percentage of Counties, Ranked by Vaccine Coverage",
       y = "Cumulative Percentage of Vaccine Coverage",
       title = "Lorenz Curve for Relative Inequality by SVI")
```

As noted, the Lorenz curve above measures inequality in a univariate way, it does not say anything about whether, for example, more *disadvantaged* counties have higher or lower vaccination coverate. To calculate a **bivariate** measure of inequality, we can use the Concentration index. Now instead of ranking counties based on their vaccination rate, we rank counties on the basis of disadvantage (SVI or SDI). We can then plot a Concentration curve, that puts disadvantage rank on the x-axis and each counties proportional contribution to the overall vaccination rate on the y-axis.

```{r f2}
f2_label <- "Least advantaged 50%\nof counties account for\nnearly 50% of the overall\nvaccination rate"

f1 %>%
  arrange(desc(svi_2020)) %>%
  mutate(disadv = 1 - svi_2020,
         cpc = rank(disadv)/length(disadv)*100,
         cpv = cumsum(svi_rate)/sum(svi_rate)*100) %>%
  ggplot(aes(x = cpc, y = cpv, colour="coverage")) + geom_line() +
  geom_segment(aes(x = 0, y = 0, xend = 100, yend = 100,
                   colour = "equality"), linetype = 'dashed') +
  coord_cartesian(expand=FALSE) +
  scale_x_continuous(limits = c(0,100)) +
  scale_y_continuous(limits = c(0,100)) +
  scale_color_manual(values = c("#377eb8", "black")) +
  theme_bw() + theme(legend.position = "none") +
  geom_curve(aes(x = 53, y = 32, xend = 50, yend = 40),
    curvature = -0.3, arrow = arrow(length = unit(0.02, "npc"))) +
  annotate("text", label = f2_label, x = 54, y = 30, 
           size = 5, colour = "#377eb8", hjust=0) +
  labs(x = "Cumulative Percentage of Counties, Ranked by SVI",
       y = "Cumulative Percentage of Vaccine Coverage",
       title = "Concentration Curve for Relative Inequality by SVI")
```
Both the Gini coefficient and the Concentration Index can be derived from these respective curves. 
```{r indexes}
svi_gini <- ci(ineqvar = f1$svi_rate, 
               outcome=f1$svi_rate, method = "direct")
svi_conc <- ci(ineqvar = f1$svi_2020, 
               outcome=f1$svi_rate, method = "direct")

t3 <- tibble(gest = svi_gini$concentration_index) %>%
  mutate(
    gll = svi_gini$concentration_index 
      - 1.96 * sqrt(svi_gini$variance), 
    gul = svi_gini$concentration_index 
      + 1.96 * sqrt(svi_gini$variance),
    cest = svi_conc$concentration_index,
    cll = svi_conc$concentration_index 
      - 1.96 * sqrt(svi_conc$variance), 
    cul = svi_conc$concentration_index 
      + 1.96 * sqrt(svi_conc$variance))

t3 %>%
  kbl(digits=2, escape = FALSE,
    caption = "Vaccine coverage inequality across counties",
    col.names = c("Est", "95% LL", "95% UL", 
      "Est", "95% LL", "95% UL")) %>%
  add_header_above(c("Gini coefficient" = 3,
    "Concentration index" = 3)) %>%
  kable_classic(html_font = "Helvetica", full_width = F) %>%
  footnote(general = "Estimates based on unweighted counties.")

```

One challenge with these indices of inequality is interpretation. The Gini coefficient, as a measure of univariate inequality, is generally easier to interpret. Since the Gini is the average value of differences in vaccine rates across all possible pairs of counties, its interpretation is the expected absolute gap between county vaccination rates relative to the average rate in the population. The Concentration index does not have a straightforward interpretation, so here the issue would be more like understanding how much it has changed from a benchmark at the beginning of our observation period.

One thing to note here is that, although there is certainly inequality in the distribution of vaccine coverage among counties, there appears to be little correlation between the value of SVI and a counties vaccination rate. This is evident from the fact that the Concentration curve for SVI is nearly overlapping with the 'line of equality' on the graph. You can see the weak correlation more clear if we just plot vaccination rates against SVI:
```{r corr, message=FALSE}
f1 %>% ggplot(aes(x = svi_2020, y = svi_rate)) +
  geom_point() + geom_smooth() +
  theme_bw() + labs(y = "Vaccination rate in 2022-2023",
    x = "SVI value in 2020")
```
Counties with the highest SVI have moderately lower values of vaccination, but it is not dramatic. 